package com.schwarz.kokain.processor.generation

import com.squareup.kotlinpoet.FileSpec
import java.io.IOException
import javax.annotation.processing.Filer

class CodeGenerator(private val filer: Filer) {

    @Throws(IOException::class)
    fun generate(entityToGenerate: FileSpec) {
        val fileWithHeader = entityToGenerate.toBuilder().addFileComment(HEADER).build()

        fileWithHeader.writeTo(filer)
    }

    fun fetchSourcePath(): String {
        try {
            val generationForPath = filer.createSourceFile("PathFor" + javaClass.simpleName)
            val writer = generationForPath.openWriter()
            val sourcePath = generationForPath.toUri().getPath()
            writer.close()
            generationForPath.delete()

            return sourcePath
        } catch (e: IOException) {
        }

        return ""
    }

    companion object {

        private val HEADER = (
            "DO NOT EDIT THIS FILE.\n" +
                "Generated using Kokain DI\n\n" +
                "Do not edit this class!!!!.\n"
            )
    }
}
